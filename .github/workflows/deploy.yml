name: Deploy to Lightsail

on:
  push:
    branches: [ "main" ]

env:
  LIGHTSAIL_INSTANCE_NAME: "WebStack01"
  AWS_REGION: "ap-northeast-2"

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Build and tag Docker image
        working-directory: ./newsapp
        run: |
          docker build -t newsapp:${{ github.sha }} .
          docker save newsapp:${{ github.sha }} > newsapp.tar
          mv newsapp.tar $GITHUB_WORKSPACE/

      - name: Install AWS CLI and Lightsail Plugin
        run: |
          echo "Checking AWS CLI version..."
          aws --version || echo "AWS CLI not found, installing..."
          
          echo "Downloading AWS CLI..."
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip -o awscliv2.zip
          
          echo "Installing or updating AWS CLI..."
          sudo ./aws/install --bin-dir /usr/local/bin --install-dir /usr/local/aws-cli --update
          
          echo "Verifying AWS CLI installation..."
          aws --version
          aws lightsail get-instance --instance-name ${{ env.LIGHTSAIL_INSTANCE_NAME }}

      - name: Copy Docker image to Lightsail
        run: |
          aws lightsail get-instance-access-details --instance-name ${{ env.LIGHTSAIL_INSTANCE_NAME }} > instance_details.json
          echo "${{ secrets.LIGHTSAIL_SSH_KEY }}" > lightsail_key.pem
          chmod 600 lightsail_key.pem
          
          INSTANCE_IP=$(jq -r '.accessDetails.ipAddress' instance_details.json)
          scp -o StrictHostKeyChecking=no -i lightsail_key.pem newsapp.tar ubuntu@$INSTANCE_IP:~/

      - name: Deploy to Lightsail
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.LIGHTSAIL_HOST }}
          username: ubuntu
          key_path: lightsail_key.pem  # ✅ 기존에 만든 PEM 파일 사용          
          script: |
            # 도커 이미지 로드
            sudo docker load < newsapp.tar

            sudo docker-compose -f docker-compose.prod.yml down || true
            echo "DJANGO_ENV=production" | sudo tee .env.prod > /dev/null
            echo "DEBUG=True" | sudo tee .env.prod > /dev/null
            echo "DB_NAME=${{ secrets.DB_NAME }}" | sudo tee .env.prod > /dev/null
            echo "DB_USER=${{ secrets.DB_USER }}" | sudo tee -a .env.prod > /dev/null
            echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" | sudo tee -a .env.prod > /dev/null
            echo "DB_HOST=${{ secrets.DB_HOST }}" | sudo tee -a .env.prod > /dev/null
            echo "DB_PORT=${{ secrets.DB_PORT }}" | sudo tee -a .env.prod > /dev/null


            sudo tee docker-compose.prod.yml > /dev/null << 'EOL'
            services:
              web:
                image: newsapp:${{ github.sha }}
                ports:
                  - "8000:8000"
                env_file:
                  - .env.prod
                restart: always
            networks:
              default:
                name: newsapp-network
            EOL

            sudo docker-compose -f docker-compose.prod.yml up -d
            sudo docker image prune -af