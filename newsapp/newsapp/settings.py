"""
Django settings for newsapp project.

Generated by 'django-admin startproject' using Django 5.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
from dotenv import load_dotenv
import pymysql
import os
pymysql.install_as_MySQLdb()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# .env 파일 로드
dotenv_path = os.path.join(BASE_DIR, '.env.prod')
load_dotenv(dotenv_path)

# 확인
print("Loaded DB_HOST:", os.getenv('DB_HOST'))  # 서버 시작 시 확인용
print("Loaded DB_PASSWORD:", os.getenv('DB_PASSWORD'))  # 서버 시작 시 확인용

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-3z6t2pow3-ba!-$$!7&!)lf5c6_f#1lq9i=e0ht#c$ulw3c@)q'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv('DEBUG', 'False')

ALLOWED_HOSTS = [
    'localhost', 
    '127.0.0.1', 
    '192.168.123.114', 
    '13.125.230.87', 
    '3.36.55.93', 
    '172.26.9.177', 
    '172.26.0.74',
    'nginx', 
    'mannal.duckdns.org'
]  # 허용하는 호스트 설정

# HTTPS 리다이렉션 비활성화
SECURE_SSL_REDIRECT = False

# 쿠키 보안 설정 비활성화 (HTTP에서도 쿠키 전송 허용)
SESSION_COOKIE_SECURE = False
CSRF_COOKIE_SECURE = False


# 브라우저 종료 시 세션 만료
SESSION_EXPIRE_AT_BROWSER_CLOSE = True

# 혹은 시간 지정 (예: 30분)
SESSION_COOKIE_AGE = 1800  # 30분 (초 단위)

# seconds 단위 (예: 30분 = 1800초)
SESSION_COOKIE_AGE = 1800  # 30분
SESSION_EXPIRE_AT_BROWSER_CLOSE = True


# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',    
    'newsapp',  # 기본앱을 등록시킴
    'accounts', # accounts 앱을 등록시킴
    'channels', # 채널 앱을 등록시킴
]

ASGI_APPLICATION = "newsapp.asgi.application"

# Redis를 WebSocket 브로커로 사용 (로컬 테스트 시 필수는 아님)
CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels.layers.InMemoryChannelLayer",  # 테스트용
    },
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'newsapp.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['newsapp/templates'], # newsapp/templates
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'newsapp.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': os.getenv('DB_NAME'),
        'USER': os.getenv('DB_USER'),
        'PASSWORD': os.getenv('DB_PASSWORD'),
        'HOST': os.getenv('DB_HOST'),
        'PORT': os.getenv('DB_PORT'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'ko-kr'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True # 다국어 지원

USE_TZ = True # 시간대 사용


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

# 정적 파일 url
STATIC_URL = '/static/'

# 정적 파일 디렉토리
STATIC_DIR = BASE_DIR / 'newsapp/static'

# 정적 파일 설정
STATICFILES_DIRS = [STATIC_DIR]

# 정적 파일 루트
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # ✅ 절대 경로

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

print("STATIC_ROOT:", STATIC_ROOT)
print("DJANGO_ENV:", os.getenv('DJANGO_ENV'))